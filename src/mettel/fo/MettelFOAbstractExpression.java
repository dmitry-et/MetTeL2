/**
 * This file is generated by MetTeL v2
 * which is designed and implemented
 * by Dmitry Tishkovsky.
 */
package mettel.fo;

import mettel.core.MettelExpression;
import mettel.core.MettelSubstitution;
import mettel.core.MettelAbstractExpression;
abstract class MettelFOAbstractExpression extends MettelAbstractExpression implements MettelExpression{

    private static volatile int expressionCounter = 0;
    private int id = -1;
    protected MettelFOObjectFactory factory = null;

    MettelFOAbstractExpression(MettelFOObjectFactory factory){
        super();
        this.factory = factory;
        id = expressionCounter++;
    }

    MettelFOAbstractExpression(){
        this(MettelFOObjectFactory.DEFAULT);
    }

    public int id(){ return id; }

    public MettelFOObjectFactory factory(){ return factory; }

    abstract int sortId();

    abstract int priority();

    public MettelSubstitution match(MettelExpression e){
        if(e instanceof MettelFOExpression) return match((MettelFOExpression)e);
        return null;
    }

    public MettelExpression substitute(MettelSubstitution s){
        if(s instanceof MettelFOSubstitution) return substitute((MettelFOSubstitution)s);
        return null;
    }
}
