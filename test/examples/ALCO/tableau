//equality rules 

@l {l2} / @l2 {l} $;
@l ~{l2} / @l2 {l2} $;

@l P / @l {l} $;

@l exists r.{l2} / @l2 {l2} $;
@l P  @l {l2} / @l2 P $;
@l exists r.{l2}  @l2 {l3} / @l exists r.{l3} $;

//Decomposition rules 

@l ~(~P) / @l P $; 
@l (P|Q) / @l P $| @l Q $;
@l ~(P|Q) / @l ~P @l ~Q $;
@l exists r.P / @l exists r.{f(l,r,P)} @f(l,r,P) P $;  
@l ~(exists r.P) @l exists r.{l2} / @l2 ~P $;

//Roles
@l exists r;s.{l2} / @l exists r.{g(l,l2,r,s)} @g(l,l2,r,s) {l2} $;
@l ~(exists r;s.P) / @l ~(exists r.(exists s.P)) $;

@l exists r|s.{l2} / @l exists r.{l2} $| @l exists s.{l2} $; 
@l ~(exists r|s.P) / @l ~(exists r.P) @l ~(exists s.P) $;

@l exists r-.{l2} / @l2 exists r.{l} $;
@l ~(exists r-.P) @l2 exists r.{l} / @l2 ~P $;
@l ~(exists (r|s)-.P) / @l ~(exists (r-)|(s-).P) $;
@l ~(exists (r;s)-.P) / @l ~(exists (s-);(r-).P) $;

// Theory rules 

// Closure rule
@l P  @l ~P /  $;
// last rule may not have $;
// no comma between formulae

